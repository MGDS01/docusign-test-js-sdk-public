/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { DocusignTestCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$workspaceDocumentsDelete } from "./tools/workspaceDocumentsDelete.js";
import { tool$workspaceDocumentsGet } from "./tools/workspaceDocumentsGet.js";
import { tool$workspaceDocumentsGetContents } from "./tools/workspaceDocumentsGetContents.js";
import { tool$workspaceDocumentsList } from "./tools/workspaceDocumentsList.js";
import { tool$workspacesCreate } from "./tools/workspacesCreate.js";
import { tool$workspacesCreateEnvelope } from "./tools/workspacesCreateEnvelope.js";
import { tool$workspacesGet } from "./tools/workspacesGet.js";
import { tool$workspacesList } from "./tools/workspacesList.js";
import { tool$workspacesListAssignableRoles } from "./tools/workspacesListAssignableRoles.js";
import { tool$workspacesListEnvelopes } from "./tools/workspacesListEnvelopes.js";
import { tool$workspaceUsersAdd } from "./tools/workspaceUsersAdd.js";
import { tool$workspaceUsersList } from "./tools/workspaceUsersList.js";
import { tool$workspaceUsersRestoreAccess } from "./tools/workspaceUsersRestoreAccess.js";
import { tool$workspaceUsersRevokeAccess } from "./tools/workspaceUsersRevokeAccess.js";
import { tool$workspaceUsersUpdate } from "./tools/workspaceUsersUpdate.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  oAuth2?: SDKOptions["oAuth2"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "DocusignTest",
    version: "0.0.11",
  });

  const client = new DocusignTestCore({
    oAuth2: deps.oAuth2,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$workspaceDocumentsList);
  tool(tool$workspaceDocumentsGet);
  tool(tool$workspaceDocumentsDelete);
  tool(tool$workspaceDocumentsGetContents);
  tool(tool$workspaceUsersList);
  tool(tool$workspaceUsersAdd);
  tool(tool$workspaceUsersUpdate);
  tool(tool$workspaceUsersRevokeAccess);
  tool(tool$workspaceUsersRestoreAccess);
  tool(tool$workspacesList);
  tool(tool$workspacesCreate);
  tool(tool$workspacesGet);
  tool(tool$workspacesListAssignableRoles);
  tool(tool$workspacesListEnvelopes);
  tool(tool$workspacesCreateEnvelope);

  return server;
}
